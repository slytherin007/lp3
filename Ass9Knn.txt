import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, precision_score, recall_score, f1_score, accuracy_score
from sklearn.metrics import classification_report
from sklearn.metrics import ConfusionMatrixDisplay

df = pd.read_csv('diabetes.csv')

df.isnull().sum()

for column in df.columns[1:-3]:
    df[column].replace(0, np.NaN, inplace=True)
    df[column].fillna(round(df[column].mean(skipna=True)), inplace=True)

df.head(10)

X = df.iloc[:, :8] 
Y = df.iloc[:, 8:]
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

knn = KNeighborsClassifier()
knn_fit = knn.fit(X_train, Y_train.values.ravel())
knn_pred = knn_fit.predict(X_test)

print("Confusion Matrix")
print(confusion_matrix(Y_test, knn_pred))
print("Accuracy Score:", accuracy_score(Y_test, knn_pred))
print("Reacal Score:", recall_score(Y_test, knn_pred))
print("F1 Score:", f1_score(Y_test, knn_pred))
print("Precision Score:", precision_score(Y_test, knn_pred))

print(classification_report(Y_test, knn_pred))

ConfusionMatrixDisplay.from_predictions(Y_test, knn_pred)
